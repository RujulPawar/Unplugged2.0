<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather Monitoring | NagarNetra</title>
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <style>
        .weather-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-top: 20px;
        }

        .chart-container {
            background-color: #1e2a38;
            border-radius: 10px;
            padding: 15px;
            width: 100%;
            height: 300px;
        }

        .temp-chart-container {
            height: 350px;
        }

        .weather-cards {
            display: flex;
            gap: 20px;
            flex-wrap: wrap;
            margin-bottom: 20px;
        }

        .weather-card {
            background-color: #1e2a38;
            border-radius: 10px;
            padding: 20px;
            flex: 1;
            min-width: 200px;
            color: white;
        }

        .weather-card h2 {
            font-size: 18px;
            margin-bottom: 10px;
        }

        .weather-value {
            font-size: 32px;
            font-weight: bold;
            margin: 10px 0;
            display: flex;
            align-items: center;
        }

        .weather-info {
            font-size: 14px;
            color: #9aa0a8;
        }

        .status-indicator {
            display: flex;
            align-items: center;
            margin-bottom: 8px;
        }

        .status-indicator span {
            margin-left: 5px;
        }

        .status-dot {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 5px;
        }

        .status-normal {
            background-color: #4caf50;
        }

        .status-warning {
            background-color: #ff9800;
        }

        .status-alert {
            background-color: #f44336;
        }

        .status-steady {
            background-color: #ffb74d;
        }

        .status-falling {
            background-color: #64b5f6;
        }

        .weather-footer {
            display: flex;
            justify-content: space-between;
            margin-top: 10px;
            font-size: 12px;
            color: #9aa0a8;
        }

        .overview-container {
            background-color: #1e2a38;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
            color: white;
        }

        .overview-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .hourly-forecast {
            display: flex;
            justify-content: space-between;
            overflow-x: auto;
            padding: 10px 0;
        }

        .forecast-hour {
            display: flex;
            flex-direction: column;
            align-items: center;
            min-width: 60px;
        }

        .forecast-icon {
            font-size: 20px;
            margin: 8px 0;
            color: #ffb74d;
        }

        .forecast-temp {
            font-weight: bold;
        }

        .forecast-time {
            font-size: 12px;
            color: #9aa0a8;
        }

        .toggle-switch {
            position: relative;
            display: inline-block;
            width: 50px;
            height: 24px;
        }

        .toggle-switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #2c3e50;
            transition: .4s;
            border-radius: 34px;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 16px;
            width: 16px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }

        input:checked + .slider {
            background-color: #3498db;
        }

        input:checked + .slider:before {
            transform: translateX(26px);
        }
    </style>
</head>
<body>
    <div class="sidebar">
        <div class="sidebar-logo">
            <img src="/images/logo.png" alt="NagarNetra Logo">
            <h1>NagarNetra</h1>
        </div>
        <ul class="sidebar-menu">
            <li><a href="/nagarnetra"><img src="/images/home.png" alt="Home Icon" class="menu-icon"><span>Home</span></a></li>
            <li><a href="#"><img src="/images/traffic.png" alt="Traffic Icon" class="menu-icon"><span>Urban Traffic Management</span></a></li>
            <li><a href="/environmental-monitoring"><img src="/images/environment.png" alt="Environment Icon" class="menu-icon"><span>Environmental Monitoring</span></a></li>
            <li><a href="#"><img src="/images/safety.png" alt="Safety Icon" class="menu-icon"><span>Public Safety</span></a></li>
            <li><a href="/maintenance"><img src="/images/maintenance.png" alt="Maintenance Icon" class="menu-icon"><span>System Maintenance</span></a></li>
        </ul>
    </div>

    <div class="main-content">
        <h1>AQI Weather</h1>

        <!-- Overview Section with Hourly Forecast -->
        <div class="overview-container">
            <div class="overview-header">
                <h3>Overview</h3>
                <label class="toggle-switch">
                    <input type="checkbox" id="feelToggle">
                    <span class="slider"></span>
                </label>
                <span>Feels like</span>
            </div>

            <div class="hourly-forecast" id="hourlyForecast">
                <% if (weather && weather.forecast) { %>
                    <% weather.forecast.forEach(hour => { %>
                        <div class="forecast-hour">
                            <div class="forecast-time"><%= hour.time %></div>
                            <div class="forecast-icon"><%= hour.icon %></div>
                            <div class="forecast-temp"><%= hour.temp %>°</div>
                        </div>
                    <% }); %>
                <% } %>
            </div>

            <div class="chart-container temp-chart-container">
                <canvas id="tempTrendChart"></canvas>
            </div>

            <div class="precipitation-indicator">
                <div style="display: flex; justify-content: space-between; margin-top: 10px;">
                    <div style="width: 12%; background-color: rgba(100, 181, 246, 0.2); height: 10px; border-radius: 5px;"></div>
                    <div style="width: 12%; background-color: rgba(100, 181, 246, 0.1); height: 10px; border-radius: 5px;"></div>
                    <div style="width: 12%; background-color: rgba(100, 181, 246, 0.1); height: 10px; border-radius: 5px;"></div>
                    <div style="width: 12%; background-color: rgba(100, 181, 246, 0.1); height: 10px; border-radius: 5px;"></div>
                    <div style="width: 12%; background-color: rgba(0, 0, 0, 0); height: 10px; border-radius: 5px;"></div>
                    <div style="width: 12%; background-color: rgba(0, 0, 0, 0); height: 10px; border-radius: 5px;"></div>
                    <div style="width: 12%; background-color: rgba(0, 0, 0, 0); height: 10px; border-radius: 5px;"></div>
                </div>
                <div style="display: flex; justify-content: space-between; margin-top: 5px; color: #9aa0a8; font-size: 12px;">
                    <div style="width: 12%; text-align: center;">6%</div>
                    <div style="width: 12%; text-align: center;">1%</div>
                    <div style="width: 12%; text-align: center;">1%</div>
                    <div style="width: 12%; text-align: center;">1%</div>
                    <div style="width: 12%; text-align: center;">0%</div>
                    <div style="width: 12%; text-align: center;">0%</div>
                    <div style="width: 12%; text-align: center;">0%</div>
                </div>
            </div>
        </div>

        <!-- Weather Cards -->
        <div class="weather-cards">
            <div class="weather-card">
                <h2>Temperature</h2>
                <div class="status-indicator">
                    <div class="status-dot <%= weather.status.temperature ? weather.status.temperature.class : 'status-normal' %>"></div>
                    <span><%= weather.status.temperature ? weather.status.temperature.status : 'Checking...' %></span>
                </div>
                <div class="weather-value"><%= weather.current.temperature %>°</div>
                <div class="weather-info">
                    <%= weather.status.temperature ? weather.status.temperature.description : '' %>
                    <%= weather.status.temperature ? 'Tomorrow is expected to be ' + weather.status.temperature.forecast + ' than today.' : '' %>
                </div>
            </div>

            <div class="weather-card">
                <h2>Humidity</h2>
                <div class="status-indicator">
                    <div class="status-dot <%= weather.status.humidity ? weather.status.humidity.class : 'status-normal' %>"></div>
                    <span><%= weather.status.humidity ? weather.status.humidity.status : 'Checking...' %></span>
                </div>
                <div class="weather-value"><%= weather.current.humidity %><span style="font-size: 20px">%</span></div>
                <div class="weather-info">
                    <%= weather.status.humidity ? weather.status.humidity.description : '' %>
                    <%= weather.status.humidity ? 'Tomorrow\'s humidity levels are expected to be ' + weather.status.humidity.forecast + ' to today.' : '' %>
                </div>
            </div>

            <div class="weather-card">
                <h2>Pressure</h2>
                <div class="status-indicator">
                    <div class="status-dot <%= weather.status.pressure ? weather.status.pressure.class : 'status-normal' %>"></div>
                    <span><%= weather.status.pressure ? weather.status.pressure.status : 'Checking...' %></span>
                </div>
                <div class="weather-value"><%= weather.current.pressure %><span style="font-size: 16px"> mb</span></div>
                <div class="weather-info"><%= weather.status.time %> (Now)</div>
                <div class="weather-footer">
                    <span>Expected to rise in the next 3 hours</span>
                </div>
            </div>
        </div>

        <!-- Weather Condition Card -->
        <div class="weather-card" style="margin-top: 20px;">
            <h2>Weather Condition</h2>
            <div class="status-indicator">
                <div class="status-dot status-normal"></div>
                <span>Monitoring</span>
            </div>
            <div class="weather-value"><%= weather.current.prediction %></div>
            <div class="weather-info">Current prediction based on sensor data</div>
        </div>
    </div>

    <script>
        // Initialize temperature trend chart once DOM is loaded
        document.addEventListener('DOMContentLoaded', function() {
            // Chart initialization
            const tempCtx = document.getElementById('tempTrendChart').getContext('2d');

            // Create gradient for the area under the line
            const tempGradient = tempCtx.createLinearGradient(0, 0, 0, 300);
            tempGradient.addColorStop(0, 'rgba(255, 183, 77, 0.7)');
            tempGradient.addColorStop(1, 'rgba(255, 183, 77, 0)');

            // Chart data from server
            const chartLabels = <%- JSON.stringify(weather.chart.labels || []) %>;
            const tempData = <%- JSON.stringify(weather.chart.tempData || []) %>;

            const tempTrendChart = new Chart(tempCtx, {
                type: 'line',
                data: {
                    labels: chartLabels,
                    datasets: [{
                        label: 'Temperature (°C)',
                        data: tempData,
                        borderColor: 'rgb(255, 183, 77)',
                        backgroundColor: tempGradient,
                        tension: 0.4,
                        fill: true,
                        pointRadius: 0,
                        borderWidth: 3
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            mode: 'index',
                            intersect: false,
                            backgroundColor: 'rgba(30, 42, 56, 0.8)',
                            titleColor: '#fff',
                            bodyColor: '#fff',
                            borderColor: 'rgba(255, 255, 255, 0.2)',
                            borderWidth: 1
                        }
                    },
                    scales: {
                        x: {
                            grid: {
                                display: false,
                                drawBorder: false
                            },
                            ticks: {
                                color: '#9aa0a8',
                                maxRotation: 0,
                                autoSkip: true,
                                maxTicksLimit: 12
                            }
                        },
                        y: {
                            position: 'right',
                            grid: {
                                color: 'rgba(255, 255, 255, 0.05)',
                                drawBorder: false
                            },
                            ticks: {
                                color: '#9aa0a8',
                                padding: 10,
                                stepSize: 10
                            },
                            min: 0,
                            max: 50
                        }
                    },
                    interaction: {
                        intersect: false,
                        mode: 'index'
                    }
                }
            });

            // Add sunrise/sunset markers
            const sunriseTime = '7:04 AM';
            const sunsetTime = '6:39 PM';

            function addSunriseSunset() {
                // Visual indicators for sunrise/sunset could be added here
                // This is a simplified version
            }

            addSunriseSunset();
        });
    </script>
</body>
</html>